[{"/Users/rostikyablonski/Documents/GitHub/my-react-application/src/index.js":"1","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/reportWebVitals.js":"2","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/App.js":"3","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Pages/Servises.js":"4","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Pages/About.js":"5","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Pages/Blog.js":"6","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/SingIn.js":"7","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Top.js":"8","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Footer.js":"9","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Pages/Home.js":"10","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Pages/Contact.js":"11","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Pages/blog/Smartphone.js":"12","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Pages/blog/Brain.js":"13","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Pages/blog/RocketBlankTextImage.js":"14","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/UlFlex.js":"15","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/BlogFlex.js":"16","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/image.js":"17","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/BlankTextImage.js":"18","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/UlFlexImgText.js":"19","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Pages/BlogTop.js":"20","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/BlogDiv.js":"21"},{"size":578,"mtime":1687275237117,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1687275237119,"results":"24","hashOfConfig":"23"},{"size":1445,"mtime":1687275237103,"results":"25","hashOfConfig":"23"},{"size":604,"mtime":1687275237118,"results":"26","hashOfConfig":"23"},{"size":596,"mtime":1687275237117,"results":"27","hashOfConfig":"23"},{"size":1985,"mtime":1687275237117,"results":"28","hashOfConfig":"23"},{"size":15016,"mtime":1687275237118,"results":"29","hashOfConfig":"23"},{"size":1900,"mtime":1687275237118,"results":"30","hashOfConfig":"23"},{"size":5851,"mtime":1687275237117,"results":"31","hashOfConfig":"23"},{"size":4724,"mtime":1687275237118,"results":"32","hashOfConfig":"23"},{"size":601,"mtime":1687275237118,"results":"33","hashOfConfig":"23"},{"size":6963,"mtime":1687275237118,"results":"34","hashOfConfig":"23"},{"size":4964,"mtime":1687275237118,"results":"35","hashOfConfig":"23"},{"size":4989,"mtime":1687275237118,"results":"36","hashOfConfig":"23"},{"size":2668,"mtime":1687275237119,"results":"37","hashOfConfig":"23"},{"size":1140,"mtime":1687275237117,"results":"38","hashOfConfig":"23"},{"size":1737,"mtime":1687275237104,"results":"39","hashOfConfig":"23"},{"size":4339,"mtime":1687275237117,"results":"40","hashOfConfig":"23"},{"size":1771,"mtime":1687275237119,"results":"41","hashOfConfig":"23"},{"size":670,"mtime":1687275237117,"results":"42","hashOfConfig":"23"},{"size":3451,"mtime":1687275237117,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qua0qw",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},"/Users/rostikyablonski/Documents/GitHub/my-react-application/src/index.js",[],[],"/Users/rostikyablonski/Documents/GitHub/my-react-application/src/reportWebVitals.js",[],[],"/Users/rostikyablonski/Documents/GitHub/my-react-application/src/App.js",[],[],"/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Pages/Servises.js",["116","117","118"],[],"import BlankTextImage from \"../BlankTextImage\";\nimport UlFlex from \"../UlFlex\";\nimport UlFlexImgText from \"../UlFlexImgText\";\nimport image from \"../../image\";\nfunction Servises() {\n\n    return (\n        <div>\n            <BlankTextImage\n                h1Text={'Servises'}\n                mainText={'Lorem ipsum is placeholder text ' +\n                    'commonly used in the graphic, print, and ' +\n                    'publishing industries for previewing layouts' +\n                    ' and visual mockups.'}\n                button={0}\n            />\n        </div>\n    )\n}\nexport default Servises\n","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Pages/About.js",["119","120","121"],[],"import BlankTextImage from \"../BlankTextImage\";\nimport UlFlex from \"../UlFlex\";\nimport UlFlexImgText from \"../UlFlexImgText\";\nimport image from \"../../image\";\nfunction About() {\n\n\n    return (\n        <div>\n            <BlankTextImage\n                h1Text={'About'}\n                mainText={'Lorem ipsum is placeholder text ' +\n                    'commonly used in the graphic, print, and ' +\n                    'publishing industries for previewing layouts' +\n                    ' and visual mockups.'}\n                button={0}\n            />\n        </div>\n    )\n}\nexport default About\n","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Pages/Blog.js",["122"],[],"import BlankTextImage from \"../BlankTextImage\";\nimport BlogFlex from \"../BlogFlex\";\nimport image from \"../../image\";\nimport {Link} from 'react-router-dom'\nimport {useEffect} from \"react\";\n\n\nfunction Blog() {\n\n    const css = {\n        ul : {\n            listStyleType: 'none',\n        },\n        link : {\n            textDecoration: 'none'\n        }\n    }\n    return (\n        <div>\n            <BlankTextImage\n                h1Text={'Blog'}\n                mainText={'Lorem ipsum is placeholder text ' +\n                    'commonly used in the graphic, print, and ' +\n                    'publishing industries for previewing layouts' +\n                    ' and visual mockups.'}\n                button={0}\n            />\n            <ul style={css.ul}>\n                <li>\n                    <Link to='/blog/smartphone' style={css.link}>\n                        <BlogFlex\n                            img={image.smartphone}\n                            text={'Lorem ipsum is placeholder text ' +\n                                'commonly used in the graphic, print, andrgdfdggfdgdff'}/>\n                    </Link>\n                </li>\n                <li>\n                    <Link to='/blog/brain'  style={css.link}>\n                        <BlogFlex\n                            img={image.brain}\n                            text={'Lorem ipsum is placeholder text ' +\n                                'commonly used in the graphic, print, andrgdfdggfdgdff'}/>\n                    </Link>\n                </li>\n                <li>\n                    <Link to='/blog/rocketBlankTextImage'  style={css.link}>\n                        <BlogFlex\n                            img={image.rocketBlankTextImage}\n                            text={'Lorem ipsum is placeholder text ' +\n                                'commonly used in the graphic, print, andrgdfdggfdgdff'}/>\n                    </Link>\n                </li>\n            </ul>\n\n        </div>\n    )\n}\nexport default Blog\n","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/SingIn.js",["123","124","125","126","127"],[],"import image from \"../image\"\nimport {useState, useRef, useEffect} from 'react'\n\nfunction SingIn(props) {\n    const [signIn, setSignIn] = useState(false)\n    const [inputError1, setInputError1] = useState('none')\n    const [inputError12, setInputError12] = useState('none')\n    const [inputError2, setInputError2] = useState('none')\n    const [inputError22, setInputError22] = useState('none')\n    const [register, setRegister] = useState(props.register)\n\n    const errorEmail = (number) => {\n        if (number === 0) {\n            setInputError1('none')\n            setInputError12('none')\n        } else if (number === 1) {\n            setInputError1('none')\n            setInputError12('block')\n        } else if (number === 2) {\n            setInputError1('block')\n            setInputError12('none')\n        } else if (number === 3) {\n            setInputError1('block')\n            setInputError12('block')\n        } else {\n            console.log('ERROR!')\n        }\n    }\n    const errorPassword = (number) => {\n        if (number === 0) {\n            setInputError2('none')\n            setInputError22('none')\n        } else if (number === 1) {\n            setInputError2('none')\n            setInputError22('block')\n        } else if (number === 2) {\n            setInputError2('block')\n            setInputError22('none')\n        } else {\n            console.log('ERROR!')\n        }\n    }\n    const [divInput1, setDivInput1] = useState({\n        text: '',\n        width: 0\n    })\n    const [divInput2, setDivInput2] = useState({\n        text: '',\n        width: 0\n    })\n    const [buttonCon, setButtonCon] = useState(false)\n    const buttonConMeneger = useRef(true)\n    const input1 = useRef(null)\n    const inputManager1 = useRef(0)\n    const input2 = useRef(null)\n    const inputManager2 = useRef(0)\n\n    const clickButton = () => {\n        if (input1.current.value !== '') {\n            if (input2.current.value.length < 8) {\n                console.log('ffffff')\n                setCssButton(css.buttonError)\n                setButtonCon(false)\n            } else if (inputError12 === 'block') {\n                console.log('fsdfdkfdkf')\n                if (!/[@]/.test(input1.current.value)) {\n                    setCssButton(css.buttonError)\n                    setButtonCon(false)\n                } else if (!/[.]/.test(input1.current.value.split('@')[1])) {\n                    setCssButton(css.buttonError)\n                    setButtonCon(false)\n                } else if (!/[@]/.test(input1.current.value.split('@')[1])) {\n                    setCssButton(css.buttonError)\n                    setButtonCon(false)\n                }\n            } else {\n                setCssButton(css.buttonActive)\n                setButtonCon(true)\n            }\n        } else {\n            setCssButton(css.buttonError)\n            setButtonCon(false)\n        }\n    }\n\n    const focusOnInput = (number) => {\n        if (number === 1) {\n            setCssInput1(css.textAreaClick)\n        } else if (number === 2) {\n            setCssInput2(css.inputClick)\n        }\n    }\n    const unFocusOnInput = (number) => {\n        if (number === 1) {\n            let numberError = 1\n            if (Number(inputManager1.current.getBoundingClientRect().width) >= 400 &&\n                Number(inputManager1.current.getBoundingClientRect().width) <= 760) {\n                numberError = 3\n            }\n            setCssInput1(css.textArea)\n            if (input1.current.value !== '') {\n                if (!/[@]/.test(input1.current.value)) {\n                    errorEmail(numberError)\n                } else if (!/[.]/.test(input1.current.value.split('@')[1])) {\n                    errorEmail(numberError)\n                }\n            } else {\n                errorEmail(numberError)\n            }\n        } else if (number === 2) {\n            setCssInput2(css.input)\n            if (input2.current.value.length < 8) {\n                errorPassword(1)\n            } else {\n                errorPassword(0)\n            }\n        }\n    }\n    const confirmButtonHTML = () => {\n        if (buttonCon && buttonConMeneger.current) {\n            buttonConMeneger.current = false\n            setTimeout(() => {\n                buttonConMeneger.current = true\n                setButtonCon(false)\n                setSignIn(true)\n            },1500)\n            return <img src={image.loading} style={css.image}/>\n        } else if (buttonCon) {\n            return <img src={image.loading} style={css.image}/>\n        }\n    }\n    const changeWidthInput = (e, number) => {\n        if (number === 1) {\n            setDivInput1({...divInput1, text: e.target.value})\n            input1.current.value = input1.current.value.replace(/\\s/g, \"\")\n        } else if (number === 2) {\n            setDivInput2({...divInput2, text: e.target.value})\n            input2.current.value = input2.current.value.replace(/\\s/g, \"\")\n        }\n    }\n\n\n    useEffect(() => {\n        if (!signIn) {\n            let a = 1\n            setDivInput1( {...divInput1, width: inputManager1.current.getBoundingClientRect().width})\n            if (Number(inputManager1.current.getBoundingClientRect().width) >= 290 &&\n                Number(inputManager1.current.getBoundingClientRect().width) <= 400) {\n                input1.current.style.width = inputManager1.current.getBoundingClientRect().width + 'px'\n                input1.current.style.height = '30px'\n             errorEmail(0)\n            } else if (Number(inputManager1.current.getBoundingClientRect().width) <= 290 &&\n                Number(inputManager1.current.getBoundingClientRect().width) <= 400) {\n                input1.current.style.width = '290px'\n                input1.current.style.height = '30px'\n                errorEmail(0)\n            } else if (Number(inputManager1.current.getBoundingClientRect().width) >= 400 &&\n                Number(inputManager1.current.getBoundingClientRect().width) <= 760) {\n                input1.current.style.height = '50px'\n                errorEmail(2)\n                a = 3\n            } else if (Number(inputManager1.current.getBoundingClientRect().width) >= 760) {\n                input1.current.value = input1.current.value\n                    .substr(0, input1.current.value.length - 2)\n                errorEmail(2)\n                a = 3\n            }\n            let b\n            b = a === 1 ? b = 0 : b = 2\n            if (/[!#$%^&*()<>,/{}/~\"№:;'|]/.test(input1.current.value)) {\n                errorEmail(a)\n            } else {\n                let input1Split = input1.current.value.split('@')[1]\n                if (input1.current.value.split('@')[2] !== undefined) {\n                    errorEmail(a)\n                } else if (input1Split?.split('.')[2] !== undefined) {\n                    errorEmail(a)\n                } else {\n                    errorEmail(b)\n                }\n            }\n        }\n    }, [divInput1.text])\n    useEffect(() => {\n        if (!signIn) {\n            setDivInput2({...divInput2, width: inputManager2.current.getBoundingClientRect().width})\n            if (Number(inputManager2.current.getBoundingClientRect().width) >= 290 &&\n                Number(inputManager2.current.getBoundingClientRect().width) <= 400) {\n                input2.current.style.width = inputManager2.current.getBoundingClientRect().width + 'px'\n                errorPassword(2)\n            } else if (Number(inputManager2.current.getBoundingClientRect().width) <= 290 &&\n                Number(inputManager2.current.getBoundingClientRect().width) <= 400) {\n                errorPassword(0)\n                input2.current.style.width = '290px'\n            } else if (Number(inputManager2.current.getBoundingClientRect().width) >= 400) {\n                input2.current.value = input2.current.value\n                    .substr(0, input2.current.value.length - 2)\n            }\n        }\n\n    }, [divInput2.text])\n\n\n    const css = {\n        body : {\n            width: '400px',\n            height: register ? '550px' : '400px',\n\n            backgroundColor: '#0d1a2c',\n            color: 'white',\n            fontSize: '20px',\n            fontFamily: 'Arial',\n            borderRadius: '5px',\n\n            margin: 'auto',\n            marginTop: '50px',\n            marginBottom: '100px',\n\n            paddingLeft: '50px',\n            paddingRight: '50px',\n            paddingBottom: '30px',\n\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between'\n        },\n        h1 : {\n            marginTop: '30px',\n            marginBottom: '0px'\n        },\n        text : {\n            marginTop: '20px'\n        },\n        textArea : {\n            width: '290px',\n            height: '30px',\n\n            backgroundColor: '#14325b',\n            color: 'white',\n            fontSize: '20px',\n            fontFamily: 'Arial',\n            outline: 'none',\n            borderRadius: '5px',\n            resize: 'none',\n\n            marginTop: '5px',\n\n            padding: '0',\n            paddingTop: '5px',\n            paddingLeft: '5px',\n            paddingRight: '5px',\n            border: '0'\n        },\n        textAreaClick : {\n            width: '290px',\n            height: '30px',\n\n            backgroundColor: '#122641',\n            color: 'white',\n            fontSize: '20px',\n            fontFamily: 'Arial',\n            outline: 'none',\n            resize: 'none',\n\n            overflow: 'hidden',\n            whiteSpace: 'normal',\n            borderRadius: '5px',\n\n            marginTop: '5px',\n\n            padding: '0',\n            paddingTop: '5px',\n            paddingLeft: '5px',\n            paddingRight: '5px',\n            border: '0',\n            boxShadow: '0 0 0 2px #fff'\n        },\n        input : {\n            width: '290px',\n            height: '30px',\n\n            backgroundColor: '#14325b',\n            color: 'white',\n            fontSize: '20px',\n            fontFamily: 'Arial',\n            outline: 'none',\n            borderRadius: '5px',\n            resize: 'none',\n\n            marginTop: '5px',\n\n\n            border: '0'\n        },\n        inputClick : {\n            width: '290px',\n            height: '30px',\n\n            backgroundColor: '#122641',\n            color: 'white',\n            fontSize: '20px',\n            fontFamily: 'Arial',\n            outline: 'none',\n            resize: 'none',\n\n            overflow: 'hidden',\n            whiteSpace: 'normal',\n            borderRadius: '5px',\n\n            marginTop: '5px',\n\n            border: '0',\n            boxShadow: '0 0 0 2px #fff'\n        },\n        inputManager : {\n            minWidth: '295px',\n            maxWidth: '400px',\n\n            fontSize: '20px',\n            visibility: 'hidden',\n            whiteSpace: 'no-wrap'\n        },\n        inputManagerManager : {\n            width: '400px',\n            height: '0',\n\n            display: 'inline',\n            visibility: 'hidden'\n        },\n        divButton : {\n            display: 'flex',\n            alignItems: 'center',\n        },\n        button : {\n            width: '120px',\n            height: '40px',\n\n            backgroundColor: '#14325b',\n            fontSize: '24px',\n            color: 'white',\n            borderRadius: '5px',\n\n            border: '0'\n        },\n        buttonActive : {\n            width: '120px',\n            height: '40px',\n\n            backgroundColor: '#122a4b',\n            color: 'white',\n            fontSize: '24px',\n            borderRadius: '5px',\n\n            border: '0'\n        },\n        buttonError : {\n            width: '120px',\n            height: '40px',\n\n            backgroundColor: '#122a4b',\n            color: 'white',\n            fontSize: '24px',\n            borderRadius: '5px',\n\n            boxShadow: '0 0 0 2px #b71d1d',\n            border: '0'\n        },\n        image : {\n            maxWidth: '25px',\n\n            marginLeft: '10px'\n        },\n        error1 : {\n            width: '400px',\n            height: '15px',\n\n\n\n            color: '#cc952a',\n            fontSize: '16px',\n            display: inputError1\n        },\n        error12 : {\n            width: '400px',\n            height: '15px',\n\n\n\n            color: '#ad3131',\n            fontSize: '16px',\n            display: inputError12\n        },\n        error2 : {\n            width: '400px',\n            height: '15px',\n\n\n\n            color: '#68c238',\n            fontSize: '16px',\n            display: inputError2\n        },\n        error22 : {\n            width: '400px',\n            height: '15px',\n\n\n\n            color: '#ad3131',\n            fontSize: '16px',\n            display: inputError22\n        },\n        textWel : {\n            marginBottom: '290px'\n        },\n    }\n\n    const [cssInput1, setCssInput1] = useState(css.textArea)\n    const [cssInput2, setCssInput2] = useState(css.input)\n    const [cssButton, setCssButton] = useState(css.button)\n\n\n    if (signIn) {\n        return (\n            <div style={css.body}>\n                <h1 style={css.h1}>Sign In</h1>\n                <text style={css.textWel}>Welcome!</text>\n            </div>\n        )\n    } else {\n        return (\n            <div style={css.body}>\n                <h1 style={css.h1}>Sign In</h1>\n\n\n                <text style={css.text}>E-mail:</text>\n\n                <textarea style={cssInput1}\n                          ref={input1}\n                          onFocus={() => focusOnInput(1)}\n                          onBlur={() => unFocusOnInput(1)}\n                          onChange={(e) => changeWidthInput(e, 1)}\n                />\n                <div style={css.error1}>E-mail is too big</div>\n                <div style={css.error12}>Invalid E-mail</div>\n                <div style={css.inputManagerManager}>\n                    <text ref={inputManager1} style={css.inputManager}\n                    >{divInput1.text}</text>\n                </div>\n\n\n                <text style={css.text}>Password:</text>\n\n                <input style={cssInput2}\n                       ref={input2}\n                       onFocus={() => focusOnInput(2)}\n                       onBlur={() => unFocusOnInput(2)}\n                       onChange={(e) => changeWidthInput(e, 2)}\n                />\n                <div style={css.error2}>That's very good password!</div>\n                <div style={css.error22}>That's password is too small!</div>\n                <div style={css.inputManagerManager}>\n                    <text ref={inputManager2} style={css.inputManager}\n                    >{divInput2.text}</text>\n                </div>\n\n\n                <div style={css.divButton}>\n                    <button style={cssButton}\n                            onMouseUp={() => {\n                                setCssButton(css.button)\n                            }}\n                            onMouseDown={clickButton}\n                    >Confirm\n                    </button>\n                    {confirmButtonHTML()}\n                </div>\n            </div>\n        )\n    }\n}\nexport default SingIn\n","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Top.js",[],[],"/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Footer.js",[],[],"/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Pages/Home.js",[],[],"/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Pages/Contact.js",["128","129","130"],[],"import BlankTextImage from \"../BlankTextImage\";\nimport UlFlex from \"../UlFlex\";\nimport UlFlexImgText from \"../UlFlexImgText\";\nimport image from \"../../image\";\nfunction Contact() {\n\n    return (\n        <div>\n            <BlankTextImage\n                h1Text={'Contact'}\n                mainText={'Lorem ipsum is placeholder text ' +\n                    'commonly used in the graphic, print, and ' +\n                    'publishing industries for previewing layouts' +\n                    ' and visual mockups.'}\n                button={0}\n            />\n        </div>\n    )\n}\nexport default Contact\n","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Pages/blog/Smartphone.js",[],[],"/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Pages/blog/Brain.js",[],[],"/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Pages/blog/RocketBlankTextImage.js",[],[],"/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/UlFlex.js",[],[],"/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/BlogFlex.js",["131"],[],"import {useEffect} from \"react\";\n\nfunction BlogFlex(props) {\n    const css = {\n        body : {\n            width: '70%',\n            height: '100px',\n\n            marginLeft: '15%',\n            marginRight: '15%',\n            marginTop: '20px',\n            marginBottom: '20px',\n\n            backgroundColor: '#FFFFFF',\n            borderRadius: '15px',\n            cursor: 'pointer',\n\n            display: 'flex',\n            alignItems: 'center'\n        },\n        img : {\n            maxWidth: '80px',\n            minWidth: '50px',\n            maxHeight: '80px',\n\n            marginRight: '60px',\n            marginLeft: '30px'\n        },\n        text : {\n            maxWidth: '900px',\n\n            color: 'black',\n            fontSize: '24px',\n        }\n\n\n    }\n    let img = (img) => {\n        if (img) {\n            return<img src={img} alt=\"имадже\" style={css.img}/>\n        }\n        return true\n    }\n\n    return (\n        <div style={css.body} onClick={_=>window.scroll({top: 0, left: 0})}>\n            {img(props.img)}\n            <text style={css.text}>{props.text}</text>\n        </div>\n    )\n}\nexport default BlogFlex\n","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/image.js",[],[],"/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/BlankTextImage.js",["132"],[],"import {useEffect} from \"react\";\n\nfunction BlankTextImage(props) {\n\n    let colorBody = '#0d1a2c';let widthText = '600px';\n    let alignText = 'flexStart'\n    if (props.dark) colorBody = '#070e17'\n    if (!props.img) {widthText = '100%'; alignText = 'center'}\n    let css = {\n        body : {\n            width: '100%',\n\n            backgroundColor: colorBody,\n            color: 'white',\n\n            display: 'flex',\n            justifyContent: 'space-around',\n            alignItems: 'center'\n        },\n        // TEXTS\n        divText : {\n            width: widthText,\n\n            marginBottom: '60px',\n\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: alignText\n        },\n        topText : {\n            textTransform: 'uppercase',\n            color: '#3A68B8',\n            fontSize: '18px',\n            lineHeight: '160%'\n        },\n        h1Text : {\n            maxWidth: '330px'\n        },\n        mainText : {\n            maxWidth: '460px',\n\n            color: '#FFFFFF',\n            opacity: '0.7'\n        },\n        // ^ TEXTS\n        // BUTTONS\n        divButtons : {\n            width: '360px',\n\n            display: 'flex',\n            justifyContent: 'space-between'\n        },\n        button : {\n            padding: '10px',\n            paddingRight: '20px',\n            paddingLeft: '20px',\n\n            marginTop: '40px',\n\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n\n            backgroundColor: '#3A68B8',\n            color: 'white',\n            fontSize: '20px',\n            lineHeight: '27px',\n            cursor: 'pointer',\n            userSelect: 'none',\n\n            border: 'none',\n            borderRadius: '5px'\n        },\n        // ^ BUTTONS\n        // IMAGE\n        divImg : {\n            width: '650px',\n            height: '650px',\n\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        img : {\n            maxWidth: '650px',\n            maxHeight: '650px'\n        },\n        playIcon : {\n            height: '26px',\n\n            marginRight: '10px'\n        }\n        // ^ IMAGE\n\n    }\n    let imgcheck = (img) => {\n        if (img) {\n            return <img src={img} alt=\"имадже в кнопке\" style={css.playIcon}/>\n        }\n        return true\n    }\n    let img = (img) => {\n        if (img) {\n            return <div style={css.divImg}>\n                <img src={img} alt=\"имадже\" style={css.img}/>\n            </div>\n        }\n        return true\n    }\n    let buttoncheck = (button) => {\n        if (button === 0) {\n            return true\n        } else if (button === 1) {\n            return (<div style={css.divButtons}>\n                <button style={css.button}>\n                    <text>{imgcheck(props.imgButton1)}{props.button1}</text>\n                </button>\n            </div>)\n        } else if (button === 2) {\n            return (<div style={css.divButtons}>\n                <button style={css.button}>\n                    <text>{imgcheck(props.imgButton1)}{props.button1}</text>\n                </button>\n                <button style={css.button}>\n                    <text>{imgcheck(props.imgButton2)}{props.button2}</text>\n                </button>\n            </div>)\n        } else {\n            console.log('CATCH A ERROR')\n            return false\n        }\n    }\n    if (props.reverse) {\n        return (\n            <div style={css.body}>\n                {img(props.img)}\n                <div style={css.divText}>\n                    <h3 style={css.topText}>{props.topText}</h3>\n                    <h1 style={css.h1Text}>{props.h1Text}</h1>\n                    <text style={css.mainText}>{props.mainText}</text>\n                    {buttoncheck(props.button)}\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div style={css.body}>\n                <div style={css.divText}>\n                    <h3 style={css.topText}>{props.topText}</h3>\n                    <h1 style={css.h1Text}>{props.h1Text}</h1>\n                    <text style={css.mainText}>{props.mainText}</text>\n                    {buttoncheck(props.button)}\n                </div>\n                {img(props.img)}\n            </div>\n        )\n    }\n}\nexport default BlankTextImage;\n","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/UlFlexImgText.js",["133","134","135"],[],"import {useState, useEffect} from \"react\";\nfunction UlFlexImgText(props) {\n    const [offsetWidth, setOffsetWidth] = useState(document.body.offsetWidth)\n    const css = {\n        body : {\n            width: '100%',\n            height: 'auto',\n\n            paddingTop: '10px',\n            paddingBottom: '10px',\n\n            backgroundColor: props.backgroundColor,\n\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        },\n        element : {\n            maxWidth: '350px',\n            minHeight: offsetWidth < 1470 ? '300px' : '240px',\n\n            padding: '3px',\n            paddingTop: '20px',\n            paddingBottom: '10px',\n            borderRadius: '20px',\n\n            backgroundColor: '#122542',\n            color: 'white',\n            textAlign: 'center',\n            opacity: '0.7',\n\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n\n            border: '10px solid ' + props.backgroundColor\n        },\n        elementImg : {\n            maxHeight: '100px',\n        }\n    }\n    window.addEventListener('resize', _=>{\n        setOffsetWidth(document.body.offsetWidth)\n    })\n\n\n\n\n    const state = []\n    for (let i = 0; i < props.count; i++) {\n        state.push(i)\n    }\n    console.log(document.body.offsetWidth)\n    return (\n        <div style={css.body}>\n            {state.map(state=>\n              <div style={css.element}>\n                <img src={props.img[state]} alt=\"\"\n                   style={css.elementImg}/>\n              <h2>{eval('props.h1Text' + state.toString())}</h2>\n              <text>{eval('props.h1Text' + state.toString())}</text>\n            </div>\n            )}\n        </div>\n    )\n}\n\nexport default UlFlexImgText;\n","/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/Pages/BlogTop.js",[],[],"/Users/rostikyablonski/Documents/GitHub/my-react-application/src/myComponent/BlogDiv.js",["136","137","138"],[],"import React, {useEffect, useRef, useState} from 'react';\n\n\n\n\n/*\n    PROPS\n\n\n    1 type\n      - text\n      - photoRight\n      - photoLeft\n      - photo\n\n\n    2 text\n      - your text\n\n    3 image\n      - your image\n\n    4 cloud\n      - true\n      - false\n    5 img\n      - your image\n    6 photoBig\n      - true\n      - false\n\n\n */\nfunction BlogDiv(props) {\n    const css = {\n        body : {\n            width: props.cloud ? '70%' : 'calc(100% - 60px)',\n            height: 'auto',\n\n            marginRight: props.cloud ? '15%' : '0',\n            marginLeft: props.cloud ? '15%' : '0',\n            marginTop: props.cloud ? '50px' : '0',\n            marginBottom: props.cloud ? '50px' : '0',\n\n            padding: '30px',\n\n            backgroundColor: '#0d1a2c',\n            color: 'white',\n            fontSize: '16px',\n\n\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n\n            borderRadius: props.cloud ? '15px' : '0'\n        },\n        text : {\n            width: props.cloud ? '80%' : '60%',\n\n            paddingLeft: props.type === 'text' ? props.cloud ? '10%' : '20%' : '0',\n\n            wordWrap: 'break-word'\n        },\n        image : {\n            maxWidth: props.cloud ? '20%' : '35%'\n        },\n        textImage : {\n            width: props.cloud ? '80%' : '60%',\n\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n\n            borderRadius: '20px'\n        },\n        textImageBig : {\n            width: props.cloud ? '60%' : '40%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n\n            borderRadius: '20px'\n        },\n        imageBig : {\n            maxWidth: props.cloud ? '40%' : '60%'\n        },\n    }\n\n\n\n\n    if (props.type === 'text') {\n        return (\n            <div style={css.body}>\n                <text style={css.text}>{props.text}</text>\n            </div>\n        )\n    } else if (props.type === 'photoRight') {\n        let cssTextImage = css.textImage\n        let cssImage = css.image\n        if (props.photoBig) {\n            cssTextImage = css.textImageBig\n            cssImage = css.imageBig\n        }\n        return (\n            <div style={css.body}>\n                <div style={cssTextImage}>\n                    <text style={css.text}>{props.text}</text>\n                </div>\n                <img src={props.img} alt=\"фоточка\" style={cssImage}/>\n            </div>\n        )\n    } else if (props.type === 'photoLeft') {\n        let cssTextImage = css.textImage\n        let cssImage = css.image\n        if (props.photoBig) {\n            cssTextImage = css.textImageBig\n            cssImage = css.imageBig\n        }\n        return (\n            <div style={css.body}>\n                <img src={props.img} alt=\"фоточка\" style={cssImage}/>\n                <div style={cssTextImage}>\n                    <text style={css.text}>{props.text}</text>\n                </div>\n            </div>\n        )\n    } else if (props.type === 'photo') {\n        let cssImage = css.image\n        if (props.photoBig) {\n            cssImage = css.imageBig\n        }\n        css.body.justifyContent = 'center'\n        return (\n            <div style={css.body}>\n                <img src={props.img} alt=\"фоточка\" style={cssImage}/>\n            </div>\n        )\n    } else {\n        console.log('ERROR')\n    }\n}\n\nexport default BlogDiv\n",{"ruleId":"139","severity":1,"message":"140","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":14},{"ruleId":"139","severity":1,"message":"143","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":21},{"ruleId":"139","severity":1,"message":"144","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":13},{"ruleId":"139","severity":1,"message":"140","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":14},{"ruleId":"139","severity":1,"message":"143","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":21},{"ruleId":"139","severity":1,"message":"144","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":13},{"ruleId":"139","severity":1,"message":"145","line":5,"column":9,"nodeType":"141","messageId":"142","endLine":5,"endColumn":18},{"ruleId":"139","severity":1,"message":"146","line":10,"column":22,"nodeType":"141","messageId":"142","endLine":10,"endColumn":33},{"ruleId":"147","severity":1,"message":"148","line":127,"column":20,"nodeType":"149","endLine":127,"endColumn":64},{"ruleId":"147","severity":1,"message":"148","line":129,"column":20,"nodeType":"149","endLine":129,"endColumn":64},{"ruleId":"150","severity":1,"message":"151","line":183,"column":8,"nodeType":"152","endLine":183,"endColumn":24,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"154","line":201,"column":8,"nodeType":"152","endLine":201,"endColumn":24,"suggestions":"155"},{"ruleId":"139","severity":1,"message":"140","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":14},{"ruleId":"139","severity":1,"message":"143","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":21},{"ruleId":"139","severity":1,"message":"144","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":13},{"ruleId":"139","severity":1,"message":"145","line":1,"column":9,"nodeType":"141","messageId":"142","endLine":1,"endColumn":18},{"ruleId":"139","severity":1,"message":"145","line":1,"column":9,"nodeType":"141","messageId":"142","endLine":1,"endColumn":18},{"ruleId":"139","severity":1,"message":"145","line":1,"column":19,"nodeType":"141","messageId":"142","endLine":1,"endColumn":28},{"ruleId":"156","severity":1,"message":"157","line":60,"column":20,"nodeType":"158","messageId":"159","endLine":60,"endColumn":24},{"ruleId":"156","severity":1,"message":"157","line":61,"column":22,"nodeType":"158","messageId":"159","endLine":61,"endColumn":26},{"ruleId":"139","severity":1,"message":"145","line":1,"column":16,"nodeType":"141","messageId":"142","endLine":1,"endColumn":25},{"ruleId":"139","severity":1,"message":"160","line":1,"column":27,"nodeType":"141","messageId":"142","endLine":1,"endColumn":33},{"ruleId":"139","severity":1,"message":"161","line":1,"column":35,"nodeType":"141","messageId":"142","endLine":1,"endColumn":43},"no-unused-vars","'UlFlex' is defined but never used.","Identifier","unusedVar","'UlFlexImgText' is defined but never used.","'image' is defined but never used.","'useEffect' is defined but never used.","'setRegister' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'divInput1' and 'signIn'. Either include them or remove the dependency array. You can also do a functional update 'setDivInput1(d => ...)' if you only need 'divInput1' in the 'setDivInput1' call.","ArrayExpression",["162"],"React Hook useEffect has missing dependencies: 'divInput2' and 'signIn'. Either include them or remove the dependency array. You can also do a functional update 'setDivInput2(d => ...)' if you only need 'divInput2' in the 'setDivInput2' call.",["163"],"no-eval","eval can be harmful.","CallExpression","unexpected","'useRef' is defined but never used.","'useState' is defined but never used.",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [divInput1, divInput1.text, signIn]",{"range":"168","text":"169"},"Update the dependencies array to be: [divInput2, divInput2.text, signIn]",{"range":"170","text":"171"},[6903,6919],"[divInput1, divInput1.text, signIn]",[7890,7906],"[divInput2, divInput2.text, signIn]"]